// <auto-generated />
using System;
using HospitalLibrary.Settings;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HospitalLibrary.Migrations
{
    [DbContext(typeof(HospitalDbContext))]
    [Migration("20230905165427_HealthInfoMigration")]
    partial class HealthInfoMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("HospitalLibrary.Core.Model.HealthInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("FatPercentage")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("LastMenstruation")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("LowerBloodPreassure")
                        .HasColumnType("integer");

                    b.Property<int>("OwnersJmbg")
                        .HasColumnType("integer");

                    b.Property<int>("SugarLever")
                        .HasColumnType("integer");

                    b.Property<int>("UpperBloodPreassure")
                        .HasColumnType("integer");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("HealthInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatPercentage = 20.5,
                            LastMenstruation = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LowerBloodPreassure = 80,
                            OwnersJmbg = 1234567890,
                            SugarLever = 90,
                            UpperBloodPreassure = 120,
                            Weight = 70.0
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2023, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatPercentage = 22.0,
                            LastMenstruation = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LowerBloodPreassure = 85,
                            OwnersJmbg = 987654321,
                            SugarLever = 95,
                            UpperBloodPreassure = 130,
                            Weight = 72.5
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2023, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatPercentage = 18.5,
                            LastMenstruation = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LowerBloodPreassure = 75,
                            OwnersJmbg = 11111111,
                            SugarLever = 88,
                            UpperBloodPreassure = 140,
                            Weight = 68.799999999999997
                        });
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Floor")
                        .HasColumnType("integer");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Floor = 1,
                            Number = "101A"
                        },
                        new
                        {
                            Id = 2,
                            Floor = 2,
                            Number = "204"
                        },
                        new
                        {
                            Id = 3,
                            Floor = 3,
                            Number = "305B"
                        });
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Emails")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<int>("Jmbg")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            Emails = "john.doe@example.com",
                            FirstName = "John",
                            Gender = 1,
                            Jmbg = 1234567890,
                            LastName = "Doe",
                            Password = "password",
                            PhoneNumber = "555-1234",
                            Role = 0
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Elm St",
                            Emails = "jane.smith@example.com",
                            FirstName = "Jane",
                            Gender = 0,
                            Jmbg = 987654321,
                            LastName = "Smith",
                            Password = "password",
                            PhoneNumber = "555-5678",
                            Role = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Oak St",
                            Emails = "bob.johnson@example.com",
                            FirstName = "Bob",
                            Gender = 1,
                            Jmbg = 11111111,
                            LastName = "Johnson",
                            Password = "password",
                            PhoneNumber = "555-9012",
                            Role = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
